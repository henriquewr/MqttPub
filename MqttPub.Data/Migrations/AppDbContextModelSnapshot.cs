// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MqttPub.Data;

#nullable disable

namespace MqttPub.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.7");

            modelBuilder.Entity("MqttPub.Data.Entities.AppActionEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("AppAction");
                });

            modelBuilder.Entity("MqttPub.Data.Entities.AppActionMqttAction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AppActionId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MqttActionId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Order")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("AppActionId");

                    b.HasIndex("MqttActionId");

                    b.ToTable("AppActionMqttAction");
                });

            modelBuilder.Entity("MqttPub.Data.Entities.MqttAction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("MqttConnectionId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("MqttConnectionId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("MqttAction");
                });

            modelBuilder.Entity("MqttPub.Data.Entities.MqttConnection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("BrokerAddress")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Port")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Topic")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("MqttConnection");
                });

            modelBuilder.Entity("MqttPub.Data.Entities.MqttMessage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("MqttActionId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Order")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("MqttActionId");

                    b.ToTable("MqttMessage");
                });

            modelBuilder.Entity("MqttPub.Data.Entities.AppActionMqttAction", b =>
                {
                    b.HasOne("MqttPub.Data.Entities.AppActionEntity", "AppAction")
                        .WithMany("MqttActions")
                        .HasForeignKey("AppActionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MqttPub.Data.Entities.MqttAction", "MqttAction")
                        .WithMany()
                        .HasForeignKey("MqttActionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppAction");

                    b.Navigation("MqttAction");
                });

            modelBuilder.Entity("MqttPub.Data.Entities.MqttAction", b =>
                {
                    b.HasOne("MqttPub.Data.Entities.MqttConnection", "MqttConnection")
                        .WithMany()
                        .HasForeignKey("MqttConnectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MqttConnection");
                });

            modelBuilder.Entity("MqttPub.Data.Entities.MqttMessage", b =>
                {
                    b.HasOne("MqttPub.Data.Entities.MqttAction", "MqttAction")
                        .WithMany("MqttMessages")
                        .HasForeignKey("MqttActionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MqttAction");
                });

            modelBuilder.Entity("MqttPub.Data.Entities.AppActionEntity", b =>
                {
                    b.Navigation("MqttActions");
                });

            modelBuilder.Entity("MqttPub.Data.Entities.MqttAction", b =>
                {
                    b.Navigation("MqttMessages");
                });
#pragma warning restore 612, 618
        }
    }
}
